import sys
from pathlib import Path
from colorama import init, Fore, Style

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è colorama –¥–ª—è Windows-–∫–æ–Ω—Å–æ–ª—ñ
init(autoreset=True)

def print_directory_structure(directory: Path, prefix: str = ""):
    """
    –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤–∏–≤–æ–¥–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –∑ –∫–æ–ª—å–æ—Ä–∞–º–∏.
    """
    if not directory.exists():
        print(Fore.RED + f"‚ùå –®–ª—è—Ö '{directory}' –Ω–µ —ñ—Å–Ω—É—î.")
        return
    if not directory.is_dir():
        print(Fore.RED + f"‚ùå –®–ª—è—Ö '{directory}' –Ω–µ —î –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—î—é.")
        return

    entries = sorted(directory.iterdir(), key=lambda x: (x.is_file(), x.name.lower()))
    for index, entry in enumerate(entries):
        is_last = index == len(entries) - 1
        connector = "‚îó‚îÅ " if is_last else "‚î£‚îÅ "

        if entry.is_dir():
            print(prefix + Fore.BLUE + connector + entry.name + "/")
            new_prefix = prefix + ("   " if is_last else "‚îÉ  ")
            print_directory_structure(entry, new_prefix)
        else:
            print(prefix + Fore.GREEN + connector + entry.name)


if len(sys.argv) != 2:
    print("üîß –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: python hw03.py <—à–ª—è—Ö_–¥–æ_–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó>")
    sys.exit(1)

dir_path = Path(sys.argv[1])
print(Fore.YELLOW + f"üìÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó: {dir_path.resolve()}\n")
print_directory_structure(dir_path)